apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.octopus.openhab"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        def IS_DEVELOPER = "IS_DEVELOPER"
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", IS_DEVELOPER, "false"
            buildConfigField "java.util.Date", "buildTime", "new java.util.Date(" + System.currentTimeMillis() + "L)"
        }
        debug {
            minifyEnabled false
            buildConfigField "boolean", IS_DEVELOPER, "true"
            buildConfigField "java.util.Date", "buildTime", "new java.util.Date(" + System.currentTimeMillis() + "L)"
            pseudoLocalesEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    //implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.fragment:fragment-ktx:1.2.4"
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.preference:preference:1.1.1"
    implementation "androidx.biometric:biometric:1.0.1"
    implementation "com.google.android.material:material:1.2.0-alpha06"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.work:work-runtime:$work_manager_version"
    //fullImplementation "androidx.work:work-gcm:$work_manager_version"
    implementation "androidx.work:work-gcm:$work_manager_version"
    implementation "androidx.media2:media2-widget:$androidx_media_version"
    implementation "androidx.media2:media2-player:$androidx_media_version"
    implementation "androidx.security:security-crypto:1.0.0-rc01"
    implementation "org.jmdns:jmdns:3.5.5"
    implementation "com.squareup.okhttp3:okhttp:$ok_http_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"
    implementation "com.squareup.okhttp3:okhttp-sse:$ok_http_version"
    // Color picker for Sitemap
    implementation "com.github.QuadFlask:colorpicker:0.0.15"
    // Color picker for preference
    implementation "com.jaredrummler:colorpicker:1.1.0"
    implementation "com.caverock:androidsvg-aar:1.4"
    implementation("com.github.appintro:appintro:5.1.0") {
        transitive false
        exclude group: "com.intellij", module: "annotations"
    }
    // MapView support
    //fullImplementation "com.google.android.gms:play-services-maps:17.0.0"
    implementation "com.google.android.gms:play-services-maps:17.0.0"
    //fossImplementation "org.osmdroid:osmdroid-android:6.1.6"
    implementation "org.osmdroid:osmdroid-android:6.1.6"

    // FCM
    //fullImplementation "com.google.firebase:firebase-messaging:20.1.6"
    implementation "com.google.firebase:firebase-messaging:20.1.6"

    // About screen
    implementation "com.github.daniel-stoneuk:material-about-library:2.4.2"
    // Used libraries
    implementation "com.mikepenz:aboutlibraries-core:$about_libraries_version"
    implementation "com.mikepenz:aboutlibraries:$about_libraries_version"
    implementation "com.github.GrenderG:Toasty:1.4.2"

    // Crash reporting
    //fullImplementation("com.crashlytics.sdk.android:crashlytics:2.10.1@aar") {
    implementation("com.crashlytics.sdk.android:crashlytics:2.10.1@aar") {
        transitive = true
    }

    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    //testImplementation "junit:junit:4.13"
    testImplementation "org.json:json:20190722"
    testImplementation "com.squareup.okhttp3:mockwebserver:$ok_http_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"

    // PowerMock
    testImplementation "org.powermock:powermock-core:$powermock_version"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"

    // Espresso UI tests
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version", {
        exclude group: "com.android.support", module: "support-annotations"
    }
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version", {
        exclude group: "com.android.support", module: "support-annotations"
    }
    //androidTestImplementation "androidx.test.ext:junit:1.1.1"
}
